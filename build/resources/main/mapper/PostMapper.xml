<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blog.main.post.PostDao">

 	<!-- tb_post 테이블 전체 컬럼 -->
    <sql id="postColumns">
          id
        , title
        , contents
        , writer
        , view_cnt
        , notice_yn
        , delete_yn
        , created_date
        , modified_date
    </sql>
    
    <!-- 게시글 저장  -->
    <insert id="save" parameterType="com.blog.main.post.PostRequest" 
    				  useGeneratedKeys="true" keyProperty="id">	<!-- 생성된 PK(id)를 객체에 담아주기 -->
    	INSERT INTO tb_post(
			<include refid="postColumns" />
    	) VALUES (
    			DEFAULT
    		,	#{title}
    		,	#{contents}
        	,	#{writer}
            , 	0
            , 	#{noticeYn}
            , 	0
            , 	now()
            ,	null
    	)
    </insert>
    
    <!-- 게시글 상세정보 조회 -->
    <select id="findById" parameterType="long" resultType="com.blog.main.post.PostResponse">
        SELECT
            <include refid="postColumns" />
        FROM
            tb_post
        WHERE
            id = #{value}
    </select>


    <!-- 게시글 수정 -->
    <update id="update" parameterType="com.blog.main.post.PostRequest">
        UPDATE tb_post
        SET
              modified_date = NOW()
            , title = #{title}
            , contents = #{contents}
            , writer = #{writer}
            , notice_yn = #{noticeYn}
        WHERE
            id = #{id}
    </update>


    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        UPDATE tb_post
        SET
            delete_yn = 1
        WHERE
            id = #{id}
    </delete>


    <!-- 게시글 리스트 조회 -->
    <select id="findAll" parameterType="com.blog.main.common.dto.SearchDto" resultType="com.blog.main.post.PostResponse">
        SELECT
            <include refid="postColumns" />
        FROM
            tb_post
        WHERE
            delete_yn = 0
            <include refid="search" />
        ORDER BY
            id DESC
        LIMIT #{recordSize} OFFSET #{pagination.limitStart}
    </select>
    
    <!-- 게시글 수 카운팅 -->
    <select id="count" parameterType="com.blog.main.common.dto.SearchDto" resultType="int">
    	SELECT
    		COUNT(*)
    	FROM
    		tb_post
    	WHERE
    		delete_yn = 0
    		<include refid="search" />
    </select>
    
    <!-- 게시글 검색 -->
    <sql id ="search">
    	<!-- 검색 키워드가 있을 때 -->
    	<if test="keyword != null and keyword !='' ">
    		<choose>
    			<!-- 검색 유형이 있을 때 -->
    			<when test="'title'.equals( searchType )">
    				AND title LIKE CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="'contents'.equals( searchType )">
    				AND contents LIKE CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="'writer'.equals( searchType )">
    				AND writer LIKE CONCAT('%', #{keyword}, '%')
    			</when>
    			
    			<!-- 전체 검색일 때 -->
    			<otherwise>
    				AND (
    						title LIKE CONCAT('%', #{keyword}, '%')
    					OR	contents LIKE CONCAT('%', #{keyword}, '%')
    					OR	writer LIKE CONCAT('%', #{keyword}, '%')
    				)
    			</otherwise>
    		</choose>
    	</if>
    </sql>   
    
</mapper>